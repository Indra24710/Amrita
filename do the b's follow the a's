//package PER;

import java.util.Scanner;

class StackApplication {

	/**
	 * @param args
	 */
	public static void main(String[] args) {

		Scanner scan = new Scanner(System.in);
		CapacityGetterSetter getset = new CapacityGetterSetter();
		int testcases = Integer.parseInt(scan.nextLine());
		int stacksize = 30;
		getset.setCapacity(stacksize);
		stack<Character> S = new StackArray<Character>();
		int inputs = Integer.parseInt(scan.nextLine());

		while (inputs >0) {
			String str = scan.nextLine();
			if(S.abCheck(str)){
		System.out.println("True");
			}else{
			    System.out.println("False");
			}
			inputs--;
		}

	}
}

interface stack<E> {
	int size();
	boolean isEmpty();
	void push(E e);
	E pop();
	E top();
	boolean abCheck(String input);
	void printStack();
}

class CapacityGetterSetter {
	private static int stackcap;

	public int getCapacity() {
		return this.stackcap;
	}

	public void setCapacity(int cap) {
		stackcap = cap;
	}
}

class StackArray<E> implements stack<E> {
	// public static final int CAPACITY=20;
	CapacityGetterSetter getset = new CapacityGetterSetter();
	private E[] data; // array container
	private int t = -1; // index to top position
	// constructor
	int CAPACITY=0;

	public StackArray() {
		CAPACITY = getset.getCapacity();
		data = (E[]) new Object[CAPACITY];
	}

	public int size() {
		// TODO Auto-generated method stub
		return (t + 1);
	}

	public boolean isEmpty() {
		// TODO Auto-generated method stub
		return (t < 0);
	}

	public void push(E e) {
		// TODO Auto-generated method stub
		//System.out.println("Pushing");
		if (size() == CAPACITY)
		{
			System.out.print("");
		}
		else {
			t = t + 1;
			data[t] = e;
		}
	}

	public E top() {
		// TODO Auto-generated method stub
		if (isEmpty()){
		//	System.out.println("StackEmptyException");
			return null;
		}
		else {
			return data[t];
		}
	}

	public E pop() {
		// TODO Auto-generated method stub
		//System.out.println("Popping");
		if (isEmpty()) {
		//	System.out.println("StackEmptyException");
			return null;
		} else {
			E temp = data[t];
			data[t] = null;
			t = t - 1;
			return temp;
		}

	}

	public void printStack() {
		if (isEmpty())
			System.out.print("");
		else{
			for (int i = 0; i < CAPACITY; i++) {
				if(data[i]!=null)
					System.out.print(data[i] + " ");
			}
			System.out.println("  ");
		}
	}

	public void flush(){ //cleans the stack
		while (!isEmpty()) {
			pop();
		}
	}
	public boolean abCheck(String input) {
		// TODO Auto-generated method stub
    int n=input.length();
    int i=0;
    
    StackArray s= new StackArray();
    StackArray t=new StackArray();
   while(i<n){
      if((input.charAt(i)!='A')&&(input.charAt(i)!='B')){
          i++;
          continue;
      }else{
          if(input.charAt(i)=='A'){
              
          s.flush();
          while((i<n)&&(input.charAt(i)=='A')){
            s.push('A');
            i++;
      }}else{
          if(input.charAt(i)=='B'){
              t.flush();
              while((i<n)&&(input.charAt(i)=='B')){
                  t.push('B');
                  i++;
              }
              if(s.size()==t.size()){
                  return true;
              }else{
                  s.flush();
                  t.flush();
                  continue;
              }
          }
      }
      
       
       
      }}
   return false;
   
	    
	    
	    
	}}
